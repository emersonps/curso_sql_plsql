
SELECT * FROM TALUNO;

--Produto Cartesiano -> ERRADO
SELECT TALUNO.COD_ALUNO, TALUNO.NOME, TCONTRATO.TOTAL
FROM TALUNO, TCONTRATO;


--Falta Critério de União das duas Tabelas.
--Forma correta.
SELECT TALUNO.COD_ALUNO, TALUNO.NOME, TCONTRATO.TOTAL
FROM TALUNO, TCONTRATO
--CRITÉRIO DE UNIÃO
WHERE TALUNO.COD_ALUNO = TCONTRATO.COD_ALUNO;


--Errado - Coluna Ambígua
--Correto: quando uma coluna existe com o mesmo nome em uma tabela,
--colocar prefixo na coluna.

SELECT COD_ALUNO, TALUNO.NOME, TCONTRATO.TOTAL
FROM TALUNO, TCONTRATO
WHERE TALUNO.COD_ALUNO = TCONTRATO.COD_ALUNO;


--Dando apelido a tabela
SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO,
       CON.COD_CONTRATO, CON.DATA, CON.TOTAL

FROM TALUNO ALU, TCONTRATO CON

WHERE CON.COD_ALUNO = ALU.COD_ALUNO --Critério de união

AND Upper(ALU.NOME) LIKE '%' --Filtro

ORDER BY ALU.NOME; --Ordenar por nome



SELECT ALU.CODIGO, ALU.NOME AS ALUNO,
       CON.COD_CONTRATO, CON.DATA, CON.TOTAL,
       ITE.COD_CURSO, CUR.NOME AS CURSO,
       ITE.VALOR
FROM TALUNO ALU, TCONTRATO CON,
     TITEM ITE, TCURSO CUR

WHERE ALU.COD_ALUNO = CON.COD_ALUNO(+) --Critério de União
AND CON.COD_CONTRATO = ITE.COD_ITEM(+)
AND ITE.COD_CURSO = CUR.COD_CURSO(+);


ALTER TABLE TITEM ADD COD_CURSO INTEGER;
SELECT * FROM TITEM;

UPDATE TITEM SET COD_CURSO = 1 WHERE COD_ITEM = 1;
UPDATE TITEM SET COD_CURSO = 3 WHERE COD_ITEM = 8;
INSERT INTO TITEM(COD_ITEM, ITEM, DOC_CURSO, COD_CURSO) VALUES (6, CURSO 1);
DROP TABLE TITEM;

DROP SEQUENCE SEQ_TITEM;

CREATE TABLE TITEM
(
  COD_ITEM INTEGER NOT NULL PRIMARY KEY,
  COD_CURSO INTEGER ,
  COD_CONTRATO INTEGER,
  VALOR NUMBER (8,2)
 );
SELECT * FROM TITEM;

CREATE SEQUENCE SEQ_TITEM START WITH 1;

DELETE FROM TITEM;

INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,1,1,500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,1,2,500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,3,3,1500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,4,4,1500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,1,6,500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,2,6,500);
INSERT INTO TITEM VALUES(SEQ_TITEM.NEXTVAL,3,7,500);

SELECT * FROM TITEM;


--SELECT COM 4 TABELAS
SELECT * FROM TALUNO;
SELECT * FROM TCONTRATO;
SELECT * FROM TITEM;
SELECT * FROM TCURSO;


SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO,
       CON.COD_CONTRATO, CON.DATA, CON.TOTAL,
       ITE.COD_CURSO, CUR.NOME AS CURSO,
       ITE.VALOR

FROM TALUNO ALU, TCONTRATO CON,
       TITEM ITE, TCURSO CUR

WHERE ALU.COD_ALUNO = CON.COD_ALUNO(+) --Critério União - (+)Mostra todos os alunos, mesmo não tendo correspondência nas outras tabelas.
AND CON.COD_CONTRATO = ITE.COD_CONTRATO(+)
AND ITE.COD_CURSO = CUR.COD_CURSO(+)

ORDER BY CON.TOTAL DESC;

SELECT * FROM TALUNO;
SELECT * FROM TCONTRATO;

INSERT INTO TALUNO VALUES(10, 'PEDRO','NOVO HAMBURGO', NULL);

ALTER TABLE TALUNO DROP COLUMN NASCIMENTO;

CREATE TABLE TDESCONTO
(
  CLASSE VARCHAR(1) PRIMARY KEY,
  INFERIOR NUMBER(4,2),
  SUPERIOR NUMBER(4,2)
);

DROP SEQUENCE SEQ_TDESCONTO;

INSERT INTO TDESCONTO VALUES ('A',00,10); --DESCONTO ENTRE 00 À 10%
INSERT INTO TDESCONTO VALUES ('B',11,15);
INSERT INTO TDESCONTO VALUES ('C',16,20);
INSERT INTO TDESCONTO VALUES ('D',21,25);
INSERT INTO TDESCONTO VALUES ('E',26,30);

SELECT * FROM TDESCONTO;
SELECT * FROM TCONTRATO;

UPDATE TCONTRATO SET
DESCONTO = 27
WHERE COD_CONTRATO = 6;

UPDATE TCONTRATO SET
DESCONTO = 20
WHERE COD_CONTRATO = 7;

COMMIT;

SELECT CON.COD_CONTRATO AS CONTRATO, CON.DESCONTO,
       DES.CLASSE AS DESCONTO

FROM TCONTRATO CON, TDESCONTO DES
WHERE CON.DESCONTO BETWEEN DES.INFERIOR AND DES.SUPERIOR
ORDER BY CON.COD_CONTRATO;

--Mostrar cursos vendidos
SELECT CUR.COD_CURSO, CUR.NOME, ITE.VALOR
FROM TCURSO CUR, TITEM ITE
WHERE CUR.COD_CURSO = ITE.COD_CURSO;

--Mostrar cursos NÃO vendidos.
SELECT CUR.COD_CURSO, CUR.NOME, ITE.COD_ITEM
FROM TCURSO CUR, TITEM ITE
WHERE CUR.COD_CURSO = ITE.COD_CURSO(+)
AND ITE.COD_ITEM IS NULL;


SELECT * FROM TCURSO;
CREATE SEQUENCE SEQ_TCURSO START WITH 5;

INSERT INTO TCURSO VALUES(SEQ_TCURSO.NEXTVAL, 'PHP', 1000, 100, NULL);
INSERT INTO TCURSO VALUES(SEQ_TCURSO.NEXTVAL, 'LÓGICA DE PROGRAMAÇAO', 100, 20, NULL);
ALTER TABLE TCURSO DROP COLUMN PRE_REQ;


ALTER TABLE TCURSO ADD FREQ_REQ INTEGER; --PRÉ-REQUISITO PARA OS CURSOS.
ALTER TABLE TCURSO RENAME COLUMN FREQ_REQ TO PRE_REQ;
SELECT * FROM TCURSO;

--Select de duas Tabelas (com ela mesma)
--Para fazer o curso de Lógica, não precisa de pré-requisito;
--Para fazer o curso de PHP, é necessário ter Lógica como Pré-requesito;
--Para fazer o curso de Oracle, é necessário ter Lógica como Pré-requesito;
--Para fazer o curso de Java, é necessário ter Lógica como Pré-requesito;
--Para fazer o curso de DBA, é necessário ter SQL e PL/SQL como Pré-requesito;

UPDATE TCURSO SET PRE_REQ = 6 WHERE COD_CURSO = 5;
UPDATE TCURSO SET PRE_REQ = 6 WHERE COD_CURSO = 1;
UPDATE TCURSO SET PRE_REQ = 6 WHERE COD_CURSO = 3;
UPDATE TCURSO SET PRE_REQ = 1 WHERE COD_CURSO = 2;
UPDATE TCURSO SET PRE_REQ = 3 WHERE COD_CURSO = 4;

SELECT * FROM TCURSO;

SELECT CURSO.NOME AS CURSO,
       PRE_REQ.NOME AS PRE_REQUISITO

FROM TCURSO CURSO, TCURSO PRE_REQ
WHERE CURSO.PRE_REQ = PRE_REQ.COD_CURSO;





